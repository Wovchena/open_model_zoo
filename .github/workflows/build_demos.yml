name: build_demos.sh

on:
  pull_request:
    branches: '**'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: python -m pip install numpy
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy

    - name: Cache OpenCV
      id: opencv-cache
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/opencv-install
        key: ${{ runner.os }}-opencv-cache

    - name: Install OpenCV
      uses: rayandrews/with-opencv-action@v1
      with:
        dir: ${{ github.workspace }}/opencv-install
        cached: ${{ steps.opencv-cache.outputs.cache-hit }}
        opencv-version: '4.7.0'

    - name: Download OpenVINO
      run: |
        wget https://storage.openvinotoolkit.org/repositories/openvino/packages/2022.3/linux/l_openvino_toolkit_ubuntu20_2022.3.0.9052.9752fafe8eb_x86_64.tgz
        tar xf l_openvino_toolkit_ubuntu20_2022.3.0.9052.9752fafe8eb_x86_64.tgz
        sudo l_openvino_toolkit_ubuntu20_2022.3.0.9052.9752fafe8eb_x86_64/install_dependencies/install_openvino_dependencies.sh
    - name: build_demos.sh
      run: |
        source l_openvino_toolkit_ubuntu20_2022.3.0.9052.9752fafe8eb_x86_64/setupvars.sh
        echo $GITHUB_WORKSPACE
        ls -AF $GITHUB_WORKSPACE/opencv-install/opencv/build
        pwd
        cd ~
        pwd
        cd -
        OpenCV_DIR=$GITHUB_WORKSPACE/opencv-install/opencv/build ./demos/build_demos.sh -DENABLE_PYTHON=y
